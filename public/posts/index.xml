<?xml version="1.0" encoding="utf-8" standalone="yes"?><?xml-stylesheet href="/feed_style.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="https://www.rssboard.org/media-rss">
  <channel>
    <title>Posts on Abdullah Salameh&#39;s Blog</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Abdullah Salameh&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 12 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" /><icon>/logo.svg</icon>
    
    
    <item>
      <title>Setting up ESP8266</title>
      <link>/posts/setting-up-esp8266/</link>
      <pubDate>Thu, 12 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/setting-up-esp8266/</guid>
      <description><![CDATA[<h1 id="esp8266-diagram">esp8266 Diagram</h1>
<p><img src="/images/8a1901b6b834b9f702bc8b98f1865959.png" alt="Image Description"></p>
<ol>
<li>
<p>In your Arduino IDE, go to File&gt; Preferences
<img src="/images/25c1dcb22468c322c64fae03eeb38268.png" alt="Image Description"></p>
</li>
<li>
<p>Enter the following into the “Additional Board Manager URLs” field:</p>
</li>
</ol>
<pre tabindex="0"><code> http://arduino.esp8266.com/stable/package_esp8266com_index.json
</code></pre><p>click the “OK” button:
<img src="/images/cb2a6a5bc38d8fb0ed3c738c7666fb57.png" alt="Image Description">
<strong>Note</strong>:if you already have the ESP8266 boards URL, you can separate the URLs with a comma as follows</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-txt" data-lang="txt"><span style="display:flex;"><span>https://dl.espressif.com/dl/package_esp32_index.json, http://arduino.esp8266.com/stable/package_esp8266com_index.json
</span></span></code></pre></div><ol start="3">
<li>
<p>Open the Boards Manager. Go to Tools &gt; Board &gt; Boards Manager…
<img src="/images/dca58c790d2582c1a35485c0f4eeb457.png" alt="Image Description"></p>
</li>
<li>
<p>Search for ESP8266 and press install button for the “ESP32 by Espressif Systems“:
<img src="/images/4cf3bafdc181e501c758294e42974b24.png" alt="Image Description"></p>
</li>
<li>
<p>That’s it. It should be installed after a few seconds.
<img src="/images/aa1a8bef9d8e750951f1346f42f92aed.png" alt="Image Description"></p>
</li>
</ol>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Troubleshooting VirtualBox Clipboard Issues on Ubuntu</title>
      <link>/posts/troubleshooting-virtualbox-clipboard-issues-on-ubuntu/</link>
      <pubDate>Mon, 09 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/troubleshooting-virtualbox-clipboard-issues-on-ubuntu/</guid>
      <description><![CDATA[<p>I&rsquo;m running Ubuntu on VirtualBox on a Windows host. Despite setting up everything I could think of, the clipboard functionality refuses to cooperate. Here’s a breakdown of my situation and the steps I’ve tried so far.</p>
<h4 id="whats-set-up">What’s Set Up:</h4>
<ol>
<li>
<p><strong>Guest Additions Installed</strong>:<br>
The <code>vbox_GAs_6.1.36</code> icon appears correctly, and shared folders between the VirtualBox guest and the Windows host work without a hitch.</p>
</li>
<li>
<p><strong>Extension Pack Installed</strong>:<br>
I’ve installed <code>Oracle_VM_VirtualBox_Extension_Pack.vbox-extpack-6.1.36a</code>.</p>
</li>
<li>
<p><strong>Clipboard Settings</strong>:<br>
Clipboard sharing is set to <em>Bidirectional</em> under the <strong>Devices</strong> menu.</p>
</li>
<li>
<p><strong>Drag and Drop</strong>:<br>
Set to <em>Bidirectional</em> as well, but it doesn’t work either.</p>
</li>
</ol>
<h4 id="the-problem">The Problem:</h4>
<ul>
<li>Copying text from Google Chrome on the host and pasting it into Firefox within the VirtualBox guest doesn’t work.</li>
<li>Copying text from Notepad on the host and pasting it into LibreOffice Writer on the guest also fails.</li>
</ul>
<h4 id="what-ive-tried">What I’ve Tried:</h4>
<p>I’ve double-checked all settings and even reinstalled Guest Additions, but the clipboard issue persists.</p>
<h4 id="possible-solution">Possible Solution:</h4>
<p>If you’re facing a similar problem, the following commands might resolve it:</p>
<ol>
<li>
<p><strong>Update and Install Necessary Packages</strong><br>
Run the following commands in your Ubuntu terminal:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>sudo apt-get update
</span></span><span style="display:flex;"><span>sudo apt-get install virtualbox-guest-x11
</span></span><span style="display:flex;"><span>sudo apt install linux-headers-<span style="color:#66d9ef">$(</span>uname -r<span style="color:#66d9ef">)</span> build-essential dkms
</span></span></code></pre></div></li>
<li>
<p><strong>Enable Clipboard Support</strong><br>
Once the above packages are installed, run:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>sudo VBoxClient --clipboard
</span></span></code></pre></div><p>Then, restart your virtual machine, after restarting the VM if it still does not work do the same command again and it will work inshallah:</p>
</li>
</ol>
<p>These steps should enable clipboard functionality. If it still doesn’t work, double-check that the Guest Additions installation was successful and matches your VirtualBox version.</p>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Starting a blog</title>
      <link>/posts/starting-a-blog/</link>
      <pubDate>Fri, 06 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/starting-a-blog/</guid>
      <description><![CDATA[<p>This image illustrates the workflow of this blog.</p>
<p><img src="/images/Starting%20a%20blog%20with%20Hugo.png" alt="Image Description"></p>
<h2 id="setting-up">Setting Up</h2>
<p>Before starting, ensure that you have <strong>Git</strong>, <strong>Go</strong> and <strong>Python</strong> installed on your system.</p>
<h2 id="create-folder-for-posts">Create Folder for Posts</h2>
<p>First, create a folder in your Obsidian vault named <code>posts</code>.</p>
<p><img src="/images/Pasted%20image%2020241206164602.png" alt="Image Description"></p>
<h2 id="install-hugo">Install Hugo</h2>
<p>Next, install Hugo and add it to your environment variables.
Link: <a href="https://gohugo.io/installation/">https://gohugo.io/installation/</a></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span><span style="color:#75715e">## Verify Hugo works</span>
</span></span><span style="display:flex;"><span>hugo version
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">## Create a new site </span>
</span></span><span style="display:flex;"><span>hugo new site websitename
</span></span><span style="display:flex;"><span>cd websitename
</span></span></code></pre></div><h2 id="initialize-git-repository">Initialize Git Repository</h2>
<p>After creating your Hugo site, initialize a Git repository:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>git init
</span></span></code></pre></div><h2 id="download-a-hugo-theme">Download a Hugo Theme</h2>
<p>Go to <a href="https://themes.gohugo.io/">Hugo Themes</a> and download a theme of your choice. For this example, we’ll use the theme <strong>Hugo Ficurinia</strong> from <a href="https://gitlab.com/gabmus/hugo-ficurinia">GitLab</a>.</p>
<p>Use the following command to add the Hugo theme to your site:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>git submodule add <span style="color:#f92672">-f</span> [<span style="color:#66d9ef">the repo link of the theme</span>] themes/[<span style="color:#66d9ef">name of the theme</span>]
</span></span></code></pre></div><p>For me I did this:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>git submodule add <span style="color:#f92672">-f</span> https<span style="color:#960050;background-color:#1e0010">:</span>//gitlab.com/gabmus/hugo-ficurinia.git themes/hugo-ficurinia
</span></span></code></pre></div><h2 id="example-theme-configuration">Example Theme Configuration</h2>
<p>Most themes come with an example configuration, which is typically the best way to get started. For the <strong>hugo-ficurinia</strong> theme:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-toml" data-lang="toml"><span style="display:flex;"><span><span style="color:#a6e22e">baseURL</span> = <span style="color:#e6db74">&#34;/&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">theme</span> = <span style="color:#e6db74">&#34;hugo-ficurinia&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">title</span> = <span style="color:#e6db74">&#34;Abdullah Salameh&#39;s Blog&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">languageCode</span> = <span style="color:#e6db74">&#34;en&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">defaultContentLanguage</span> = <span style="color:#e6db74">&#34;en&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># this will be included in the footer after the current year the site is last</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># built, followed by the (c) symbol</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># you can use markdown inside this field</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">paginate</span> = <span style="color:#ae81ff">5</span>  <span style="color:#75715e"># number of articles per page in the index</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">summaryLength</span> = <span style="color:#ae81ff">50</span>  <span style="color:#75715e"># number of words for article summaries</span>
</span></span><span style="display:flex;"><span>[<span style="color:#a6e22e">params</span>]
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">author</span> = <span style="color:#e6db74">&#34;Abdullah Salameh&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">description</span> = <span style="color:#e6db74">&#34;A description for my website&#34;</span>  <span style="color:#75715e"># this will be added as metadata</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">posts</span> = <span style="color:#e6db74">&#34;posts&#34;</span>  <span style="color:#75715e"># content directory where to find home page posts; default searches in &#34;posts&#34; and &#34;post&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">showPostsLink</span> = <span style="color:#66d9ef">true</span>  <span style="color:#75715e"># show or hide the link to the simple post list</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">extraContentDirs</span> = []  <span style="color:#75715e"># other content directories to render similarly to the home page</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">showcaseDir</span> = <span style="color:#e6db74">&#34;showcase&#34;</span>  <span style="color:#75715e"># create a content directory that shows a special showcase section in the home page</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># shows a specified single page as a home page, instead of the traditional articles list</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># requires setting `homeSinglePage`</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># goes well with extraContentDirs</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">showSinglePageAsHome</span> = <span style="color:#66d9ef">false</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">homeSinglePage</span> = <span style="color:#e6db74">&#34;/home&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># It&#39;s best to put these icons in the &#34;static&#34; folder of your site</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">logo</span> = <span style="color:#e6db74">&#34;/logo.svg&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">favicon</span> = <span style="color:#e6db74">&#34;/favicon.png&#34;</span>  <span style="color:#75715e"># 32x32</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">faviconIco</span> = <span style="color:#e6db74">&#34;/favicon.ico&#34;</span>  <span style="color:#75715e"># 32x32</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">appletouch</span> = <span style="color:#e6db74">&#34;/apple-touch-icon.png&#34;</span>  <span style="color:#75715e"># 180x180</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">svgicon</span> = <span style="color:#e6db74">&#34;/logo.svg&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">icon512</span> = <span style="color:#e6db74">&#34;/icon512.png&#34;</span>  <span style="color:#75715e"># 512x512 png image</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">logoRightOfTitle</span> = <span style="color:#66d9ef">false</span>  <span style="color:#75715e"># positions the logo to the right of the title; default: false</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">showTags</span> = <span style="color:#66d9ef">true</span>  <span style="color:#75715e"># show the Tags menu item; default true</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">showRss</span> = <span style="color:#66d9ef">false</span>  <span style="color:#75715e"># show the link for the RSS feed; default true</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">imageInArticlePreview</span> = <span style="color:#66d9ef">true</span>  <span style="color:#75715e"># show images in article preview; default false</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">fitImageInArticlePreview</span> = <span style="color:#66d9ef">false</span>  <span style="color:#75715e"># make article preview images fit the article preview instead of getting cropped</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">articleSummary</span> = <span style="color:#66d9ef">true</span>  <span style="color:#75715e"># show a summary in article preview; default true</span>
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">fontFamily</span> = <span style="color:#e6db74">&#34;JetBrains Mono&#34;</span>  <span style="color:#75715e"># changes the font, default &#34;JetBrains Mono&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">titleFontFamily</span> = <span style="color:#e6db74">&#34;JetBrains Mono&#34;</span>  <span style="color:#75715e"># font used for titles and headings</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">monospaceFontFamily</span> = <span style="color:#e6db74">&#34;JetBrains Mono&#34;</span>  <span style="color:#75715e"># changes the monospace font for code, default &#34;JetBrains Mono&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># multipliers applied to font sizes, useful for custom fonts that may be too big or too small</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">titleFontSizeMultiplier</span> = <span style="color:#ae81ff">1.0</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">mainFontSizeMultiplier</span> = <span style="color:#ae81ff">1.0</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">monoFontSizeMultiplier</span> = <span style="color:#ae81ff">1.0</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">contentWidth</span> = <span style="color:#e6db74">&#34;1000px&#34;</span>  <span style="color:#75715e"># maximum width of the site content, css syntax</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">paperCards</span> = <span style="color:#66d9ef">true</span>  <span style="color:#75715e"># enable paper card style; default false</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">buttonTags</span> = <span style="color:#66d9ef">false</span>  <span style="color:#75715e"># enable button tag style; default false</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">tagsInArticlePreview</span> = <span style="color:#66d9ef">true</span>  <span style="color:#75715e"># enable tags list in the article preview card</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">gridView</span> = <span style="color:#66d9ef">true</span>  <span style="color:#75715e"># show post list as a grid. goes well with paperCards</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">bigArticleTitle</span> = <span style="color:#66d9ef">false</span>  <span style="color:#75715e"># makes the title in the single article view bigger</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">navtype</span> = <span style="color:#e6db74">&#34;standard&#34;</span>  <span style="color:#75715e"># changes the style of the pagination, available styles are: &#34;standard&#34;, &#34;circles&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">enableShadow</span> = <span style="color:#66d9ef">false</span>  <span style="color:#75715e"># shows a shadow around some elements</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">menuStyle</span> = <span style="color:#e6db74">&#34;buttons&#34;</span>  <span style="color:#75715e"># changes the style of the main site navigation menu, available styles are: &#34;standard&#34;, &#34;buttons&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">inputStyle</span> = <span style="color:#e6db74">&#34;standard&#34;</span> <span style="color:#75715e"># changes the style of inputs (like the searchbar), available styles are: &#34;standard&#34;, &#34;buttons&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">enableSearch</span> = <span style="color:#66d9ef">true</span>  <span style="color:#75715e"># enable search page</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">searchbarEverywhere</span> = <span style="color:#66d9ef">true</span>  <span style="color:#75715e"># if the searchbar should be shown in every page; requires enableSearch</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">searchMenuLink</span> = <span style="color:#66d9ef">false</span>  <span style="color:#75715e"># add a search link to the navigation menu; requires enableSearch</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">mobileHamburgerNav</span> = <span style="color:#66d9ef">false</span>  <span style="color:#75715e"># alternative hamburger menu layout for the main nav menu when screen is small</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">enableFeatured</span> = <span style="color:#66d9ef">false</span>  <span style="color:#75715e"># enable a particular view for articles marked as featured (featured: true in the article frontmatter)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">underlineTitleLinks</span> = <span style="color:#66d9ef">false</span>  <span style="color:#75715e"># show an underline also for links that are titles</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># enable comments support with commento using the script from your server</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">commento</span> = <span style="color:#e6db74">&#34;https://example.com/js/commento.js&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># enable comments support with cactus comments (cactus.chat)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">cactusCommentsSiteName</span> = <span style="color:#e6db74">&#34;example.com&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">cactusCommentsServerName</span> = <span style="color:#e6db74">&#34;cactus.chat&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">cactusCommentsHomeserver</span> = <span style="color:#e6db74">&#34;https://matrix.cactus.chat:8448&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># enable analytics using Plausible</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">plausibleScriptUrl</span> = <span style="color:#e6db74">&#34;https://something.com/...&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">plausibleDomain</span> = <span style="color:#e6db74">&#34;example.com&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># enable analytics using Umami</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">umamiScriptUrl</span> = <span style="color:#e6db74">&#34;https://something.com/...&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">umamiWebsiteId</span> = <span style="color:#e6db74">&#34;example-tracking-code&#34;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">enableShareOnFediverse</span> = <span style="color:#66d9ef">false</span>  <span style="color:#75715e"># enable a button at the end of an article to share it on the fediverse</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">tocBeforeImage</span> = <span style="color:#66d9ef">false</span>  <span style="color:#75715e"># show the table of contents before the main article image; default false</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># WARNING: deprecated! Use [[menu.icons]] instead, look below</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># links = [</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e">#     [&#34;GitLab&#34;, &#34;https://gitlab.com/gabmus&#34;],</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e">#     [&#34;GNOME&#34;, &#34;https://gitlab.gnome.org/gabmus&#34;],</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e">#     [&#34;YouTube&#34;, &#34;https://youtube.com/TechPillsNet&#34;]</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># ]</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># you can customize all of the colors in this theme</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Colors are defined in data/colors.yml</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># alternative sidebar layout</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">enableSidebarLayout</span> = <span style="color:#66d9ef">false</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">tocInSidebar</span> = <span style="color:#66d9ef">false</span>  <span style="color:#75715e"># if the sidebar is enbabled, show the TOC in the sidebar</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># redirect to baseURL if current URL host doesn&#39;t match</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># useful if deploying in gitlab pages with custom domain and don&#39;t want</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># the username.gitlab.io/website url to persist</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># this requires you to set baseURL (see above)</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">forceRedirect</span> = <span style="color:#66d9ef">false</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">infiniteScrolling</span> = <span style="color:#66d9ef">false</span>  <span style="color:#75715e"># activates infinite scrolling instead of regular pagination</span>
</span></span><span style="display:flex;"><span>                               <span style="color:#75715e"># NOTE: you need to enable JSON output for this to work!</span>
</span></span><span style="display:flex;"><span>                               <span style="color:#75715e">#       look at the [outputs] section below</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">enableFooterColumns</span> = <span style="color:#66d9ef">false</span>  <span style="color:#75715e"># activates footer columns, as described below</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">enableJumbotron</span> = <span style="color:#66d9ef">false</span>  <span style="color:#75715e"># enables jumbotron, as described below</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># related articles will be selected randomly based on tags and shown at</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># the bottom of the article, after the comments</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">enableRelatedArticles</span> = <span style="color:#66d9ef">true</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">relatedArticlesNum</span> = <span style="color:#ae81ff">2</span>  <span style="color:#75715e"># how many related articles to show</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">randomRelated</span> = <span style="color:#66d9ef">false</span>  <span style="color:#75715e"># sorts related articles in random order (randomized at built time)</span>
</span></span><span style="display:flex;"><span>[<span style="color:#a6e22e">menu</span>]
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># these links will be added to the main navigation menu, sorted by weight</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># other elements in this menu are added automatically from the &#34;pages&#34; folder</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># the folder it will look into can be customized with the pages variable</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># in params above</span>
</span></span><span style="display:flex;"><span>    [[<span style="color:#a6e22e">menu</span>.<span style="color:#a6e22e">main</span>]]
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">identifier</span> = <span style="color:#e6db74">&#34;about&#34;</span>
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">name</span> = <span style="color:#e6db74">&#34;About&#34;</span>
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">url</span> = <span style="color:#e6db74">&#34;/about/&#34;</span>
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">weight</span> = <span style="color:#ae81ff">10</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># these links (menu.icons) will be added as icon links below the main nav</span>
</span></span><span style="display:flex;"><span>    [[<span style="color:#a6e22e">menu</span>.<span style="color:#a6e22e">icons</span>]]
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">identifier</span> = <span style="color:#e6db74">&#34;github&#34;</span>
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">name</span> = <span style="color:#e6db74">&#34;Github&#34;</span>
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">url</span> = <span style="color:#e6db74">&#34;https://github.com/abda-s&#34;</span>
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">weight</span> = <span style="color:#ae81ff">10</span>
</span></span><span style="display:flex;"><span>    [[<span style="color:#a6e22e">menu</span>.<span style="color:#a6e22e">icons</span>]]
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">identifier</span> = <span style="color:#e6db74">&#34;linkedin&#34;</span>
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">name</span> = <span style="color:#e6db74">&#34;LinkedIn&#34;</span>
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">url</span> = <span style="color:#e6db74">&#34;https://www.linkedin.com/in/abdullah-salameh/&#34;</span>
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">weight</span> = <span style="color:#ae81ff">20</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># this section is necessary if you want infinite scrolling</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># it allows to output the article list as paged JSON so that &#34;pages&#34; can be retrieved via javascript</span>
</span></span><span style="display:flex;"><span>[<span style="color:#a6e22e">outputs</span>]
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">home</span> = [<span style="color:#e6db74">&#34;HTML&#34;</span>, <span style="color:#e6db74">&#34;JSON&#34;</span>]
</span></span></code></pre></div><p>you can use the previous configuration in your <code>hugo.toml</code> file:</p>
<p><img src="/images/Pasted%20image%2020241206143800.png" alt="Image Description"></p>
<h2 id="test-the-hugo-site-locally">Test the Hugo Site Locally</h2>
<p>Run the Hugo server to test if everything is set up correctly:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>hugo server -t [<span style="color:#66d9ef">themename</span>]
</span></span></code></pre></div><p>It&rsquo;s working but there isn&rsquo;t any posts <img src="/images/Pasted%20image%2020241206144110.png" alt="Image Description"></p>
<h2 id="add-posts">Add Posts</h2>
<p>If everything is working but you don’t see any posts, create a <code>posts</code> folder inside the <code>content</code> directory:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>cd content
</span></span><span style="display:flex;"><span>mkdir posts
</span></span></code></pre></div><h2 id="sync-obsidian-notes-with-hugo-posts">Sync Obsidian Notes with Hugo Posts</h2>
<p>To sync your Obsidian notes with the Hugo posts folder, use the <code>robocopy</code> command:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>robocopy [<span style="color:#66d9ef">sourcepath] [destination</span>] /mir
</span></span></code></pre></div><p><img src="/images/Pasted%20image%2020241206144306.png" alt="Image Description"></p>
<h2 id="add-metadata-for-new-posts">Add Metadata for New Posts</h2>
<p>When starting a new post, make sure to add the following metadata at the top of your markdown file:</p>
<pre tabindex="0"><code>---
title: blogtitle
date: 2024-11-06
draft: false
tags:
  - tag1
  - tag2
---
</code></pre><p><img src="/images/Pasted%20image%2020241206175820.png" alt="Image Description"></p>
<h2 id="add-images-to-hugo">Add Images to Hugo</h2>
<p>When you add images to your Obsidian notes, they won’t appear in the Hugo site because the image source is only in Obsidian. To fix this, use the following Python script to copy the images to the Hugo static folder.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">import</span> os
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> re
</span></span><span style="display:flex;"><span><span style="color:#f92672">import</span> shutil
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Paths (using raw strings to handle Windows backslashes correctly)</span>
</span></span><span style="display:flex;"><span>posts_dir <span style="color:#f92672">=</span> <span style="color:#e6db74">r</span><span style="color:#e6db74">&#34;C:\Users\3adas\Documents\salamehBlog\content\posts&#34;</span>
</span></span><span style="display:flex;"><span>attachments_dir <span style="color:#f92672">=</span> <span style="color:#e6db74">r</span><span style="color:#e6db74">&#34;C:\Users\3adas\OneDrive\Notes\files&#34;</span>
</span></span><span style="display:flex;"><span>static_images_dir <span style="color:#f92672">=</span> <span style="color:#e6db74">r</span><span style="color:#e6db74">&#34;C:\Users\3adas\Documents\salamehBlog\static\images&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Step 1: Process each markdown file in the posts directory</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">for</span> filename <span style="color:#f92672">in</span> os<span style="color:#f92672">.</span>listdir(posts_dir):
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> filename<span style="color:#f92672">.</span>endswith(<span style="color:#e6db74">&#34;.md&#34;</span>):
</span></span><span style="display:flex;"><span>        filepath <span style="color:#f92672">=</span> os<span style="color:#f92672">.</span>path<span style="color:#f92672">.</span>join(posts_dir, filename)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">with</span> open(filepath, <span style="color:#e6db74">&#34;r&#34;</span>, encoding<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;utf-8&#34;</span>) <span style="color:#66d9ef">as</span> file:
</span></span><span style="display:flex;"><span>            content <span style="color:#f92672">=</span> file<span style="color:#f92672">.</span>read()
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Step 2: Find all image links in the format ![[image.extension]]</span>
</span></span><span style="display:flex;"><span>        images <span style="color:#f92672">=</span> re<span style="color:#f92672">.</span>findall(<span style="color:#e6db74">r</span><span style="color:#e6db74">&#39;\[\[([^]]+\.(png|jpg|jpeg|gif|bmp|webp|svg))\]\]&#39;</span>, content, re<span style="color:#f92672">.</span>IGNORECASE)
</span></span><span style="display:flex;"><span>        
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Step 3: Replace image links and ensure URLs are correctly formatted</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">for</span> image, _ <span style="color:#f92672">in</span> images:  <span style="color:#75715e"># `_` is unused, it contains the extension from the regex group</span>
</span></span><span style="display:flex;"><span>            <span style="color:#75715e"># Prepare the Markdown-compatible link with %20 replacing spaces</span>
</span></span><span style="display:flex;"><span>            markdown_image <span style="color:#f92672">=</span> <span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;![Image Description](/images/</span><span style="color:#e6db74">{</span>image<span style="color:#f92672">.</span>replace(<span style="color:#e6db74">&#39; &#39;</span>, <span style="color:#e6db74">&#39;%20&#39;</span>)<span style="color:#e6db74">}</span><span style="color:#e6db74">)&#34;</span>
</span></span><span style="display:flex;"><span>            content <span style="color:#f92672">=</span> content<span style="color:#f92672">.</span>replace(<span style="color:#e6db74">f</span><span style="color:#e6db74">&#34;![[</span><span style="color:#e6db74">{</span>image<span style="color:#e6db74">}</span><span style="color:#e6db74">]]&#34;</span>, markdown_image)
</span></span><span style="display:flex;"><span>            
</span></span><span style="display:flex;"><span>            <span style="color:#75715e"># Step 4: Copy the image to the Hugo static/images directory if it exists</span>
</span></span><span style="display:flex;"><span>            image_source <span style="color:#f92672">=</span> os<span style="color:#f92672">.</span>path<span style="color:#f92672">.</span>join(attachments_dir, image)
</span></span><span style="display:flex;"><span>            <span style="color:#66d9ef">if</span> os<span style="color:#f92672">.</span>path<span style="color:#f92672">.</span>exists(image_source):
</span></span><span style="display:flex;"><span>                shutil<span style="color:#f92672">.</span>copy(image_source, static_images_dir)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#75715e"># Step 5: Write the updated content back to the markdown file</span>
</span></span><span style="display:flex;"><span>        <span style="color:#66d9ef">with</span> open(filepath, <span style="color:#e6db74">&#34;w&#34;</span>, encoding<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;utf-8&#34;</span>) <span style="color:#66d9ef">as</span> file:
</span></span><span style="display:flex;"><span>            file<span style="color:#f92672">.</span>write(content)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>print(<span style="color:#e6db74">&#34;Markdown files processed and images copied successfully.&#34;</span>)
</span></span></code></pre></div><h3 id="run-the-python-script">Run the Python Script</h3>
<p>Save the above Python script as <code>images.py</code> in the root folder of your Hugo site. Run the script using:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>python images.py
</span></span></code></pre></div><h2 id="upload-the-code-to-github">Upload the Code to GitHub</h2>
<p>To upload your Hugo site to GitHub, follow these steps:</p>
<h3 id="step-1-create-a-new-repository">Step 1: Create a New Repository</h3>
<ol>
<li>
<p>Click the <strong>plus icon</strong> in GitHub.<br>
<img src="/images/Pasted%20image%2020241206145729.png" alt="Image Description"></p>
</li>
<li>
<p>Select <strong>New repository</strong> from the dropdown menu.<br>
<img src="/images/Pasted%20image%2020241206145803.png" alt="Image Description"></p>
</li>
<li>
<p>Name your repository. For example, you could use <code>salamehBlog</code>, Set the repository to <strong>Public</strong>.
<img src="/images/Pasted%20image%2020241206150019.png" alt="Image Description"></p>
</li>
<li>
<p>Click <strong>Create repository</strong>.<br>
<img src="/images/Pasted%20image%2020241206150113.png" alt="Image Description"></p>
</li>
</ol>
<hr>
<h3 id="step-2-push-your-code-to-github">Step 2: Push Your Code to GitHub</h3>
<ol>
<li>Add the remote origin for your repository:</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>git remote add origin https<span style="color:#960050;background-color:#1e0010">:</span>//github.com/username/salamehBlog.git
</span></span></code></pre></div><ol start="2">
<li>Build the website:</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>hugo
</span></span></code></pre></div><ol start="3">
<li>Add all files to the staging area:</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>git add .
</span></span></code></pre></div><ol start="4">
<li>Commit your changes:</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>git commit -m <span style="color:#e6db74">&#34;Initial commit&#34;</span>
</span></span></code></pre></div><ol start="5">
<li>Push the code to GitHub:</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>git push -u origin main
</span></span></code></pre></div><ol start="6">
<li>Create a new branch for GitHub pages to deploy from</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>git subtree split --prefix public -b gh-pages-deploy
</span></span><span style="display:flex;"><span>git push origin gh-pages-deploy:gh-pages --force
</span></span><span style="display:flex;"><span>git branch -D gh-pages-deploy
</span></span></code></pre></div><p>After completing these steps, your Hugo website will be successfully uploaded to GitHub and ready for deployment.</p>
<h2 id="deployment">Deployment</h2>
<ol>
<li>
<p>Navigate to the <strong>Settings</strong> of your GitHub repository.</p>
</li>
<li>
<p>Select <strong>Pages</strong> from the left-hand menu.</p>
</li>
<li>
<p>Choose the <code>gh-pages</code> branch and set your custom domain.<br>
<img src="/images/Pasted%20image%2020241206182531.png" alt="Image Description"></p>
</li>
<li>
<p>In the <code>public</code> folder of your Hugo project, create a file named <code>CNAME</code>.
<img src="/images/Pasted%20image%2020241206182922.png" alt="Image Description"></p>
</li>
<li>
<p>Add your custom domain (e.g., <code>blog.salameh.top</code>) inside the <code>CNAME</code> file.</p>
</li>
</ol>
<h2 id="automation-script">Automation Script</h2>
<p>Now that everything is set up, we need to address the challenge of running multiple commands each time we want to publish a post. This process is prone to human error and can be cumbersome. To streamline this, we’ll create a PowerShell script that automates the entire workflow.</p>
<ol>
<li><strong>Create the Script</strong><br>
In the root folder of your blog, create a new file named <code>updateblog.ps1</code> and paste the following code into it:</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span><span style="color:#75715e"># PowerShell Script for Windows</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Set variables for Obsidian to Hugo copy</span>
</span></span><span style="display:flex;"><span>$sourcePath = <span style="color:#e6db74">&#34;C:\Users\3adas\OneDrive\Notes\posts&#34;</span>
</span></span><span style="display:flex;"><span>$destinationPath = <span style="color:#e6db74">&#34;C:\Users\3adas\Documents\salamehBlog\content\posts&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Set Github repo </span>
</span></span><span style="display:flex;"><span>$myrepo = <span style="color:#e6db74">&#34;reponame&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Set error handling</span>
</span></span><span style="display:flex;"><span>$ErrorActionPreference = <span style="color:#e6db74">&#34;Stop&#34;</span>
</span></span><span style="display:flex;"><span>Set-StrictMode -Version Latest
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Change to the script&#39;s directory</span>
</span></span><span style="display:flex;"><span>$ScriptDir = Split-Path -Parent $MyInvocation.MyCommand.Definition
</span></span><span style="display:flex;"><span>Set-Location $ScriptDir
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Check for required commands</span>
</span></span><span style="display:flex;"><span>$requiredCommands = @(<span style="color:#e6db74">&#39;git&#39;</span>, <span style="color:#e6db74">&#39;hugo&#39;</span>)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Check for Python command (python or python3)</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> (Get-Command <span style="color:#e6db74">&#39;python&#39;</span> -ErrorAction SilentlyContinue) {
</span></span><span style="display:flex;"><span>    $pythonCommand = <span style="color:#e6db74">&#39;python&#39;</span>
</span></span><span style="display:flex;"><span>} <span style="color:#66d9ef">elseif</span> (Get-Command <span style="color:#e6db74">&#39;python3&#39;</span> -ErrorAction SilentlyContinue) {
</span></span><span style="display:flex;"><span>    $pythonCommand = <span style="color:#e6db74">&#39;python3&#39;</span>
</span></span><span style="display:flex;"><span>} <span style="color:#66d9ef">else</span> {
</span></span><span style="display:flex;"><span>    Write-Error <span style="color:#e6db74">&#34;Python is not installed or not in PATH.&#34;</span>
</span></span><span style="display:flex;"><span>    exit <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">foreach</span> ($cmd <span style="color:#66d9ef">in</span> $requiredCommands) {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> (<span style="color:#f92672">-not</span> (Get-Command $cmd -ErrorAction SilentlyContinue)) {
</span></span><span style="display:flex;"><span>        Write-Error <span style="color:#e6db74">&#34;</span>$cmd<span style="color:#e6db74"> is not installed or not in PATH.&#34;</span>
</span></span><span style="display:flex;"><span>        exit <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Step 1: Check if Git is initialized, and initialize if necessary</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> (<span style="color:#f92672">-not</span> (Test-Path <span style="color:#e6db74">&#34;.git&#34;</span>)) {
</span></span><span style="display:flex;"><span>    Write-Host <span style="color:#e6db74">&#34;Initializing Git repository...&#34;</span>
</span></span><span style="display:flex;"><span>    git init
</span></span><span style="display:flex;"><span>    git remote add origin $myrepo
</span></span><span style="display:flex;"><span>} <span style="color:#66d9ef">else</span> {
</span></span><span style="display:flex;"><span>    Write-Host <span style="color:#e6db74">&#34;Git repository already initialized.&#34;</span>
</span></span><span style="display:flex;"><span>    $remotes = git remote
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">if</span> (<span style="color:#f92672">-not</span> ($remotes <span style="color:#f92672">-contains</span> <span style="color:#e6db74">&#39;origin&#39;</span>)) {
</span></span><span style="display:flex;"><span>        Write-Host <span style="color:#e6db74">&#34;Adding remote origin...&#34;</span>
</span></span><span style="display:flex;"><span>        git remote add origin $myrepo
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Step 2: Sync posts from Obsidian to Hugo content folder using Robocopy</span>
</span></span><span style="display:flex;"><span>Write-Host <span style="color:#e6db74">&#34;Syncing posts from Obsidian...&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> (<span style="color:#f92672">-not</span> (Test-Path $sourcePath)) {
</span></span><span style="display:flex;"><span>    Write-Error <span style="color:#e6db74">&#34;Source path does not exist: </span>$sourcePath<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>    exit <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> (<span style="color:#f92672">-not</span> (Test-Path $destinationPath)) {
</span></span><span style="display:flex;"><span>    Write-Error <span style="color:#e6db74">&#34;Destination path does not exist: </span>$destinationPath<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>    exit <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Use Robocopy to mirror the directories</span>
</span></span><span style="display:flex;"><span>$robocopyOptions = @(<span style="color:#e6db74">&#39;/MIR&#39;</span>, <span style="color:#e6db74">&#39;/Z&#39;</span>, <span style="color:#e6db74">&#39;/W:5&#39;</span>, <span style="color:#e6db74">&#39;/R:3&#39;</span>)
</span></span><span style="display:flex;"><span>$robocopyResult = robocopy $sourcePath $destinationPath @robocopyOptions
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> ($LASTEXITCODE <span style="color:#f92672">-ge</span> <span style="color:#ae81ff">8</span>) {
</span></span><span style="display:flex;"><span>    Write-Error <span style="color:#e6db74">&#34;Robocopy failed with exit code </span>$LASTEXITCODE<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>    exit <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Step 3: Process Markdown files with Python script to handle image links</span>
</span></span><span style="display:flex;"><span>Write-Host <span style="color:#e6db74">&#34;Processing image links in Markdown files...&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> (<span style="color:#f92672">-not</span> (Test-Path <span style="color:#e6db74">&#34;images.py&#34;</span>)) {
</span></span><span style="display:flex;"><span>    Write-Error <span style="color:#e6db74">&#34;Python script images.py not found.&#34;</span>
</span></span><span style="display:flex;"><span>    exit <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Execute the Python script</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">try</span> {
</span></span><span style="display:flex;"><span>    &amp; $pythonCommand images.py
</span></span><span style="display:flex;"><span>} <span style="color:#66d9ef">catch</span> {
</span></span><span style="display:flex;"><span>    Write-Error <span style="color:#e6db74">&#34;Failed to process image links.&#34;</span>
</span></span><span style="display:flex;"><span>    exit <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Step 4: Build the Hugo site</span>
</span></span><span style="display:flex;"><span>Write-Host <span style="color:#e6db74">&#34;Building the Hugo site...&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">try</span> {
</span></span><span style="display:flex;"><span>    hugo
</span></span><span style="display:flex;"><span>} <span style="color:#66d9ef">catch</span> {
</span></span><span style="display:flex;"><span>    Write-Error <span style="color:#e6db74">&#34;Hugo build failed.&#34;</span>
</span></span><span style="display:flex;"><span>    exit <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Step 5: Add changes to Git, including handling deletions</span>
</span></span><span style="display:flex;"><span>Write-Host <span style="color:#e6db74">&#34;Staging changes for Git...&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Detect changes and include deletions</span>
</span></span><span style="display:flex;"><span>$gitStatus = git status --porcelain
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> (<span style="color:#f92672">-not</span> $gitStatus) {
</span></span><span style="display:flex;"><span>    Write-Host <span style="color:#e6db74">&#34;No changes to stage.&#34;</span>
</span></span><span style="display:flex;"><span>} <span style="color:#66d9ef">else</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># Stage all changes, including deletions</span>
</span></span><span style="display:flex;"><span>    Write-Host <span style="color:#e6db74">&#34;Staging all changes, including deletions...&#34;</span>
</span></span><span style="display:flex;"><span>    git add --all
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Step 6: Commit changes with a dynamic message</span>
</span></span><span style="display:flex;"><span>$commitMessage = <span style="color:#e6db74">&#34;synced posts on </span>$(Get-Date -Format <span style="color:#e6db74">&#39;yyyy-MM-dd HH:mm:ss&#39;</span>)<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>$hasStagedChanges = (git diff --cached --name-only) <span style="color:#f92672">-ne</span> <span style="color:#e6db74">&#34;&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> (<span style="color:#f92672">-not</span> $hasStagedChanges) {
</span></span><span style="display:flex;"><span>    Write-Host <span style="color:#e6db74">&#34;No changes to commit.&#34;</span>
</span></span><span style="display:flex;"><span>} <span style="color:#66d9ef">else</span> {
</span></span><span style="display:flex;"><span>    Write-Host <span style="color:#e6db74">&#34;Committing changes...&#34;</span>
</span></span><span style="display:flex;"><span>    git commit -m <span style="color:#e6db74">&#34;</span>$commitMessage<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Step 7: Push all changes to the main branch</span>
</span></span><span style="display:flex;"><span>Write-Host <span style="color:#e6db74">&#34;Deploying to GitHub Master...&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">try</span> {
</span></span><span style="display:flex;"><span>    git push origin master
</span></span><span style="display:flex;"><span>} <span style="color:#66d9ef">catch</span> {
</span></span><span style="display:flex;"><span>    Write-Error <span style="color:#e6db74">&#34;Failed to push to Master branch.&#34;</span>
</span></span><span style="display:flex;"><span>    exit <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Step 8: Push the public folder to the gh-pages branch using subtree split and force push</span>
</span></span><span style="display:flex;"><span>Write-Host <span style="color:#e6db74">&#34;Deploying to GitHub pages...&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Check if the temporary branch exists and delete it</span>
</span></span><span style="display:flex;"><span>$branchExists = git branch --list <span style="color:#e6db74">&#34;gh-pages-deploy&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">if</span> ($branchExists) {
</span></span><span style="display:flex;"><span>    git branch -D gh-pages-deploy
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Perform subtree split</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">try</span> {
</span></span><span style="display:flex;"><span>    git subtree split --prefix public -b gh-pages-deploy
</span></span><span style="display:flex;"><span>} <span style="color:#66d9ef">catch</span> {
</span></span><span style="display:flex;"><span>    Write-Error <span style="color:#e6db74">&#34;Subtree split failed.&#34;</span>
</span></span><span style="display:flex;"><span>    exit <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Push to gh-pages branch with force</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">try</span> {
</span></span><span style="display:flex;"><span>    git push origin gh-pages-deploy:gh-pages --force
</span></span><span style="display:flex;"><span>} <span style="color:#66d9ef">catch</span> {
</span></span><span style="display:flex;"><span>    Write-Error <span style="color:#e6db74">&#34;Failed to push to hostinger branch.&#34;</span>
</span></span><span style="display:flex;"><span>    git branch -D gh-pages-deploy
</span></span><span style="display:flex;"><span>    exit <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Delete the temporary branch</span>
</span></span><span style="display:flex;"><span>git branch -D gh-pages-deploy
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Write-Host <span style="color:#e6db74">&#34;All done! Site synced, processed, committed, built, and deployed.&#34;</span>
</span></span></code></pre></div><ol start="2">
<li><strong>Run the Script</strong><br>
Each time you want to sync or upload a new post, simply execute the script:</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-powershell" data-lang="powershell"><span style="display:flex;"><span>.\updateblog.ps1
</span></span></code></pre></div>]]></description>
      
    </item>
    
    
    
    <item>
      <title>Learning VIM</title>
      <link>/posts/learning-vim/</link>
      <pubDate>Thu, 05 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/learning-vim/</guid>
      <description><![CDATA[<p>Everything is based on this <a href="https://youtu.be/RZ4p-saaQkc">video</a>.</p>
<h2 id="installing-vim">Installing VIM</h2>
<p>First, check if it’s installed by typing <code>vi</code> or <code>vim</code> in the terminal. If you see the following output:
<img src="/images/Pasted%20image%2020241205183304.png" alt="Image Description">
it means the program is installed. Otherwise, you’ll need to install it using your Linux package manager.</p>
<p>If you&rsquo;re on Ubuntu, use the following commands:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>sudo apt install vi 
</span></span></code></pre></div><p>or</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>sudo apt install vim 
</span></span></code></pre></div><h2 id="understanding-vim-modes">Understanding vim Modes</h2>
<p>Vim has several modes, each designed for specific tasks. Vim’s modes are its core strength, allowing efficient text manipulation and navigation. Each mode has a specific purpose, and transitioning between them is seamless.</p>
<hr>
<h3 id="1-normal-mode">1. Normal Mode</h3>
<p><strong>Purpose:</strong> The default mode for navigating and executing commands.<br>
<strong>How to Enter:</strong> Press <code>Esc</code> from any mode.</p>
<h4 id="features-in-normal-mode">Features in Normal Mode:</h4>
<ul>
<li><strong>Cursor Navigation:</strong>
<ul>
<li>Use <code>h</code> (left), <code>j</code> (down), <code>k</code> (up), and <code>l</code> (right).</li>
<li>Jump words with <code>w</code> (next word) or <code>b</code> (back a word).</li>
<li>Jump to start/end of the line with <code>^</code>/<code>$</code>.</li>
</ul>
</li>
<li><strong>Editing Commands:</strong>
<ul>
<li><code>dd</code>: Delete a line.</li>
<li><code>yy</code>: Copy (yank) a line.</li>
<li><code>p</code>: Paste copied/cut text.</li>
<li><code>u</code>: Undo the last change.</li>
</ul>
</li>
<li><strong>Search &amp; Replace:</strong>
<ul>
<li><code>/the-thing-you-want</code>: Search forward for &ldquo;the-thing-you-want&rdquo;.</li>
<li><code>?the-thing-you-want</code>: Search backward for &ldquo;the-thing-you-want&rdquo;.</li>
</ul>
</li>
</ul>
<h4 id="exiting-normal-mode">Exiting Normal Mode:</h4>
<p>You&rsquo;re always in Normal Mode unless you&rsquo;ve entered another mode. Press <code>Esc</code> to ensure you&rsquo;re back.</p>
<hr>
<h3 id="2-insert-mode">2. Insert Mode</h3>
<p><strong>Purpose:</strong> To insert text into the file.<br>
In Vim, <strong>capitalized versions of commands often extend or modify the behavior of their lowercase counterparts</strong>, typically operating on a <strong>larger scope</strong> or providing a <strong>slightly different action</strong>. Here’s how capitalized versions of <code>i</code>, <code>a</code>, and <code>o</code> behave and differ from their lowercase equivalents:</p>
<h4 id="i-vs-i">i vs. I</h4>
<ul>
<li><strong><code>i</code> (Insert Mode)</strong>:
<ul>
<li>Enters <strong>Insert Mode</strong> at the <strong>current cursor position</strong>.</li>
<li>You can begin inserting text immediately before the character where the cursor is located.</li>
</ul>
</li>
<li><strong><code>I</code> (Insert at Start of Line)</strong>:
<ul>
<li>Enters <strong>Insert Mode</strong> at the <strong>beginning of the current line</strong>, skipping over any leading whitespace or indentation.</li>
<li>This is useful for quickly editing or appending text at the start of a line without manually navigating there.</li>
</ul>
</li>
</ul>
<h5 id="example">Example:</h5>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-plaintext" data-lang="plaintext"><span style="display:flex;"><span>   This is a sentence.  (Cursor on the &#34;T&#34;)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Pressing `i`:  Insert before &#34;T&#34;.
</span></span><span style="display:flex;"><span>Pressing `I`:  Insert at the very start of the line (before the &#34;T&#34; and leading spaces).
</span></span></code></pre></div><h4 id="a-vs-a">a vs. A</h4>
<ul>
<li><strong><code>a</code> (Append Mode)</strong>:
<ul>
<li>Enters <strong>Insert Mode</strong> immediately <strong>after the current cursor position</strong>.</li>
<li>Allows you to append text to the current character.</li>
</ul>
</li>
<li><strong><code>A</code> (Append at End of Line)</strong>:
<ul>
<li>Enters <strong>Insert Mode</strong> at the <strong>end of the current line</strong>, regardless of the cursor’s current position.</li>
<li>Ideal for quickly adding text at the end of a line.</li>
</ul>
</li>
</ul>
<h5 id="example-1">Example:</h5>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-plaintext" data-lang="plaintext"><span style="display:flex;"><span>   This is a sentence.  (Cursor on &#34;T&#34;)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Pressing `a`:  Append after &#34;T&#34;.
</span></span><span style="display:flex;"><span>Pressing `A`:  Jump to the end of the line and begin inserting.
</span></span></code></pre></div><h4 id="o-vs-o">o vs. O</h4>
<ul>
<li><strong><code>o</code> (Open Below)</strong>:
<ul>
<li>Opens a <strong>new line below the current line</strong> and enters <strong>Insert Mode</strong>.</li>
<li>Convenient for adding new lines after the current one.</li>
</ul>
</li>
<li><strong><code>O</code> (Open Above)</strong>:
<ul>
<li>Opens a <strong>new line above the current line</strong> and enters <strong>Insert Mode</strong>.</li>
<li>Useful for quickly inserting new lines before the current line.</li>
</ul>
</li>
</ul>
<h5 id="example-2">Example:</h5>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-plaintext" data-lang="plaintext"><span style="display:flex;"><span>   Line 1
</span></span><span style="display:flex;"><span>   Line 2 (Cursor here)
</span></span><span style="display:flex;"><span>   Line 3
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Pressing `o`:  Opens a new line below &#34;Line 2&#34;.
</span></span><span style="display:flex;"><span>Pressing `O`:  Opens a new line above &#34;Line 2&#34;.
</span></span></code></pre></div><h4 id="why-capitalization-matters">Why Capitalization Matters</h4>
<p>Capitalized commands like <code>I</code>, <code>A</code>, and <code>O</code> are shortcuts for actions that would otherwise require additional steps or motions:</p>
<ul>
<li><strong><code>I</code> saves time</strong> by avoiding manual navigation to the start of the line.</li>
<li><strong><code>A</code> avoids navigating to the end of the line</strong> before appending.</li>
<li>**<code>O</code> and <code>o</code> make it easy to insert blank lines without leaving the current context.</li>
</ul>
<p>This behavior reflects Vim&rsquo;s philosophy of providing <strong>shortcuts for repetitive or common editing tasks</strong> while maintaining efficient text editing workflows. By mastering these commands, you can significantly improve your productivity in Vim.</p>
<h4 id="features-in-insert-mode">Features in Insert Mode:</h4>
<ul>
<li>Type as you would in a regular text editor.</li>
<li>Use arrow keys to navigate (though it&rsquo;s better to return to Normal Mode for navigation).</li>
</ul>
<h4 id="exiting-insert-mode">Exiting Insert Mode:</h4>
<p>Press <code>Esc</code> to return to Normal Mode.</p>
<hr>
<h3 id="3-visual-mode">3. Visual Mode</h3>
<p><strong>Purpose:</strong> To select text for manipulation.<br>
<strong>How to Enter:</strong></p>
<ul>
<li><code>v</code>: Character-wise selection.</li>
<li><code>V</code>: Line-wise selection.</li>
<li><code>Ctrl+v</code>: Block/column-wise selection.</li>
</ul>
<h4 id="features-in-visual-mode">Features in Visual Mode:</h4>
<ul>
<li>Highlight text with cursor movement.</li>
<li>Perform actions like:
<ul>
<li><code>d</code>: Cut (delete) selection.</li>
<li><code>y</code>: Copy (yank) selection.</li>
<li><code>&gt;</code>/<code>&lt;</code>: Indent or unindent selection. <em>It&rsquo;s like pressing <code>TAB</code></em></li>
<li><code>U</code>/<code>u</code>: Convert selection to uppercase/lowercase.</li>
</ul>
</li>
</ul>
<h4 id="exiting-visual-mode">Exiting Visual Mode:</h4>
<p>Press <code>Esc</code> to return to Normal Mode.</p>
<hr>
<h3 id="4-command-line-mode">4. Command-Line Mode</h3>
<p><strong>Purpose:</strong> Execute advanced commands like saving, quitting, or search-and-replace.<br>
<strong>How to Enter:</strong></p>
<ul>
<li><code>:</code>: For general commands.</li>
<li><code>/</code>: For forward search.</li>
<li><code>?</code>: For backward search.</li>
</ul>
<h4 id="examples-of-commands">Examples of Commands:</h4>
<ul>
<li><code>:w</code>: Save changes.</li>
<li><code>:q</code>: Quit.</li>
<li><code>:wq</code>: Save and quit.</li>
<li><code>:q!</code>: Quit without saving.</li>
<li><code>:s/old/new/g</code>: Replace &ldquo;old&rdquo; with &ldquo;new&rdquo; in the current line.</li>
</ul>
<h4 id="exiting-command-line-mode">Exiting Command-Line Mode:</h4>
<p>Press <code>Esc</code> to cancel the current command or after executing it.</p>
<hr>
<p>These modes make Vim incredibly versatile, catering to diverse editing needs and workflows. By mastering them, you unlock Vim&rsquo;s full potential for efficient text editing.</p>
<h2 id="combining-multiple-commands">Combining Multiple Commands</h2>
<p>In Vim, you can combine multiple commands to perform actions in sequence on text or the file you&rsquo;re editing. This allows for powerful, efficient editing without needing to switch modes repeatedly.</p>
<h3 id="commands-cheat-sheet">Commands Cheat Sheet</h3>
<p><img src="/images/Pasted%20image%2020241205211919.png" alt="Image Description"></p>
<h3 id="using-command-combinations">Using Command Combinations</h3>
<p>You can combine commands by using <strong>command prefixes</strong>, which allow you to perform multiple actions in a single command.</p>
<h3 id="examples-of-command-combinations">Examples of Command Combinations:</h3>
<ol>
<li>
<p><strong>Delete Word (<code>diw</code>)</strong>:</p>
<ul>
<li>
<p>The command <code>diw</code> combines two commands:</p>
<ul>
<li><code>d</code>: Delete</li>
<li><code>iw</code>: Inner word (selects the word under the cursor).</li>
</ul>
</li>
<li>
<p>This deletes the word under the cursor without deleting the space after it.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-plaintext" data-lang="plaintext"><span style="display:flex;"><span>The quick brown fox
</span></span></code></pre></div><p>If the cursor is on &ldquo;quick&rdquo;, pressing <code>diw</code> will delete &ldquo;quick&rdquo;, leaving &ldquo;The brown fox&rdquo;.</p>
</li>
</ul>
</li>
<li>
<p><strong>Change Word (<code>ciw</code>)</strong>:</p>
<ul>
<li>
<p><code>ciw</code> stands for &ldquo;change inner word&rdquo;.</p>
<ul>
<li><code>c</code>: Change (deletes and enters insert mode)</li>
<li><code>iw</code>: Inner word (selects the word under the cursor).</li>
</ul>
</li>
<li>
<p>This command deletes the word and enters Insert Mode for you to type a new word.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-plaintext" data-lang="plaintext"><span style="display:flex;"><span>The quick brown fox
</span></span></code></pre></div><p>If the cursor is on &ldquo;quick&rdquo;, pressing <code>ciw</code> will delete &ldquo;quick&rdquo; and place the cursor in Insert Mode to type a new word.</p>
</li>
</ul>
</li>
<li>
<p><strong>Delete Inside Brackets (<code>di(</code>)</strong>:</p>
<ul>
<li>
<p><code>di(</code> combines <code>d</code> (delete) and <code>i(</code> (inner parentheses).</p>
</li>
<li>
<p>It deletes the contents inside parentheses, but leaves the parentheses themselves intact.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-plaintext" data-lang="plaintext"><span style="display:flex;"><span>This is (sample text) inside parentheses.
</span></span></code></pre></div><p>If the cursor is inside the parentheses, pressing <code>di(</code> will delete &ldquo;sample text&rdquo; but leave the parentheses.</p>
</li>
</ul>
</li>
<li>
<p><strong>Yank Line (<code>yy</code>)</strong>:</p>
<ul>
<li><code>yy</code> yanks (copies) the entire line the cursor is on, including line breaks.</li>
<li>You can also use <code>2yy</code> to yank multiple lines at once (in this case, 2 lines).</li>
</ul>
</li>
<li>
<p><strong>Indent Selection (<code>&gt;</code> or <code>&lt;</code>)</strong>:</p>
<ul>
<li>To indent a selection, you can use the <code>&gt;</code> command.
<ul>
<li>In Visual Mode (<code>v</code> or <code>V</code>), you can select a block of text and then use <code>&gt;</code> to indent the entire block.</li>
</ul>
</li>
<li>To un-indent, use <code>&lt;</code>.</li>
</ul>
</li>
<li>
<p><strong>Undo and Redo</strong>:</p>
<ul>
<li><code>u</code>: Undo the last change.</li>
<li><code>Ctrl+r</code>: Redo the undone change.</li>
</ul>
</li>
</ol>
<h3 id="combining-commands-with-count-prefixes">Combining Commands with Count Prefixes:</h3>
<p>You can also prefix commands with numbers to apply them a certain number of times.</p>
<ul>
<li><strong>Example: <code>5dd</code></strong>:
<ul>
<li>Deletes 5 lines starting from the cursor&rsquo;s current position.</li>
</ul>
</li>
<li><strong>Example: <code>3w</code></strong>:
<ul>
<li>Moves the cursor forward 3 words.</li>
</ul>
</li>
</ul>
<p>This technique of combining commands and using prefixes significantly enhances Vim&rsquo;s efficiency, making it easier to manipulate text with fewer keystrokes.</p>
<h2 id="the-set-command">The <code>:set</code> Command</h2>
<p>Here are examples of the <code>:set</code> command in Vim, showcasing how to customize the editor&rsquo;s behavior and appearance:</p>
<h3 id="1-enable-line-numbers">1. Enable Line Numbers</h3>
<ul>
<li>
<p><strong>Absolute Line Numbers</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">number</span>
</span></span></code></pre></div><p>Displays line numbers on the left-hand side of the screen.</p>
</li>
<li>
<p><strong>Relative Line Numbers</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">relativenumber</span>
</span></span></code></pre></div><p>Shows line numbers relative to the current cursor position, making it easier to navigate using commands like <code>5j</code> or <code>10k</code>.</p>
</li>
<li>
<p><strong>Disable Line Numbers</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">nonumber</span>
</span></span><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">norelativenumber</span>
</span></span></code></pre></div><p>Disables both absolute and relative line numbers.</p>
</li>
</ul>
<hr>
<h3 id="2-highlight-search-results">2. <strong>Highlight Search Results</strong></h3>
<ul>
<li>
<p><strong>Enable Search Highlighting</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">hlsearch</span>
</span></span></code></pre></div><p>Highlights all search matches in the document.</p>
</li>
<li>
<p><strong>Disable Search Highlighting</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">nohlsearch</span>
</span></span></code></pre></div><p>Turns off the search highlighting after completing a search.</p>
</li>
<li>
<p><strong>Enable Incremental Search</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">incsearch</span>
</span></span></code></pre></div><p>Shows search results as you type, instead of waiting until you press <code>Enter</code>.</p>
</li>
<li>
<p><strong>Disable Incremental Search</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">noincsearch</span>
</span></span></code></pre></div></li>
</ul>
<hr>
<h3 id="3-auto-indentation">3. Auto-Indentation</h3>
<ul>
<li>
<p><strong>Enable Auto-Indentation</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">smartindent</span>
</span></span></code></pre></div><p>Automatically indents new lines based on the previous line&rsquo;s indentation (useful for programming).</p>
</li>
<li>
<p><strong>Enable Syntax-based Indentation</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#66d9ef">filetype</span>=<span style="color:#a6e22e">python</span>
</span></span><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">smarttab</span>
</span></span><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">autoindent</span>
</span></span><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">tabstop</span>=<span style="color:#ae81ff">4</span>
</span></span><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">shiftwidth</span>=<span style="color:#ae81ff">4</span>
</span></span></code></pre></div><p>Customizes indentation rules for a specific file type, such as Python. These settings ensure consistent indentation using 4 spaces.</p>
</li>
<li>
<p><strong>Disable Auto-Indentation</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">noautoindent</span>
</span></span><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">nosmartindent</span>
</span></span></code></pre></div></li>
</ul>
<hr>
<h3 id="4-tab-and-space-settings">4. Tab and Space Settings</h3>
<ul>
<li>
<p><strong>Set Tab Width</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">tabstop</span>=<span style="color:#ae81ff">4</span>
</span></span></code></pre></div><p>Sets the width of a tab character to 4 spaces.</p>
</li>
<li>
<p><strong>Set Indentation Width</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">shiftwidth</span>=<span style="color:#ae81ff">4</span>
</span></span></code></pre></div><p>Sets the number of spaces to use for indentation when pressing <code>&gt;</code> or <code>&lt;</code>.</p>
</li>
<li>
<p><strong>Use Spaces Instead of Tabs</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">expandtab</span>
</span></span></code></pre></div><p>Converts tab characters to spaces (commonly used in Python and other languages).</p>
</li>
<li>
<p><strong>Use Tabs Instead of Spaces</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">noexpandtab</span>
</span></span></code></pre></div><p>Ensures that tabs are inserted when the Tab key is pressed, rather than spaces.</p>
</li>
</ul>
<hr>
<h3 id="5-line-wrapping">5. Line Wrapping</h3>
<ul>
<li>
<p><strong>Enable Line Wrapping</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">wrap</span>
</span></span></code></pre></div><p>Enables text wrapping, so lines that extend past the screen width are wrapped onto the next line.</p>
</li>
<li>
<p><strong>Disable Line Wrapping</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">nowrap</span>
</span></span></code></pre></div><p>Disables text wrapping, and long lines will scroll horizontally instead of wrapping.</p>
</li>
</ul>
<hr>
<h3 id="6-search-case-sensitivity">6. Search Case Sensitivity</h3>
<ul>
<li>
<p><strong>Case-Insensitive Search</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">ignorecase</span>
</span></span></code></pre></div><p>Makes searches case-insensitive (e.g., searching for &ldquo;apple&rdquo; will match &ldquo;Apple&rdquo;, &ldquo;APPLE&rdquo;, etc.).</p>
</li>
<li>
<p><strong>Case-Sensitive Search</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">noignorecase</span>
</span></span></code></pre></div><p>Ensures searches are case-sensitive.</p>
</li>
<li>
<p><strong>Smart Case Search</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">smartcase</span>
</span></span></code></pre></div><p>Makes searches case-insensitive unless you use an uppercase letter in the search query. For example, searching for &ldquo;apple&rdquo; will match all cases, but searching for &ldquo;Apple&rdquo; will only match &ldquo;Apple&rdquo;.</p>
</li>
</ul>
<hr>
<h3 id="7-auto-completion">7. Auto-Completion</h3>
<ul>
<li>
<p><strong>Enable File Completion</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">wildmenu</span>
</span></span></code></pre></div><p>Enhances the command-line completion feature with a graphical menu-like interface.</p>
</li>
<li>
<p><strong>Enable Path Completion</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">wildmode</span>=<span style="color:#a6e22e">list</span>:<span style="color:#a6e22e">longest</span>
</span></span></code></pre></div><p>Enables more intuitive file path completion on the command line.</p>
</li>
</ul>
<hr>
<h3 id="8-backup-and-swap-files">8. Backup and Swap Files</h3>
<ul>
<li>
<p><strong>Disable Swap Files</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">noswapfile</span>
</span></span></code></pre></div><p>Disables the creation of swap files. Swap files are used for recovering unsaved changes in case of a crash.</p>
</li>
<li>
<p><strong>Enable Backup Files</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">backup</span>
</span></span><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">backupdir</span>=~/<span style="color:#a6e22e">vim</span>-<span style="color:#a6e22e">backups</span>
</span></span></code></pre></div><p>Enables creating backup files when saving a file and specifies the directory for backups.</p>
</li>
<li>
<p><strong>Disable Backup Files</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">nobackup</span>
</span></span></code></pre></div></li>
</ul>
<hr>
<h3 id="9-status-line-customization">9. Status Line Customization</h3>
<ul>
<li>
<p><strong>Enable the Status Line</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">laststatus</span>=<span style="color:#ae81ff">2</span>
</span></span></code></pre></div><p>Always shows the status line at the bottom of the Vim window.</p>
</li>
<li>
<p><strong>Disable the Status Line</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">laststatus</span>=<span style="color:#ae81ff">0</span>
</span></span></code></pre></div></li>
</ul>
<hr>
<h3 id="10-show-line-and-column-number">10. Show Line and Column Number</h3>
<ul>
<li><strong>Enable Line and Column Number Display</strong>:
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">ruler</span>
</span></span></code></pre></div>Displays the current line and column number in the status line, so you always know your position in the file.</li>
</ul>
<hr>
<h3 id="11-mouse-support">11. Mouse Support</h3>
<ul>
<li>
<p><strong>Enable Mouse Support</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">mouse</span>=<span style="color:#a6e22e">a</span>
</span></span></code></pre></div><p>Enables mouse support for selecting text and resizing windows inside Vim.</p>
</li>
<li>
<p><strong>Disable Mouse Support</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">mouse</span>=
</span></span></code></pre></div></li>
</ul>
<hr>
<h3 id="12-vim-colorscheme">12. Vim Colorscheme</h3>
<ul>
<li><strong>Set a Colorscheme</strong>:
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">colorscheme</span> <span style="color:#a6e22e">desert</span>
</span></span></code></pre></div>Sets the colorscheme to &ldquo;desert&rdquo; (you can replace <code>desert</code> with any other installed colorscheme like <code>elflord</code>, <code>morning</code>, or <code>industry</code>).</li>
</ul>
<hr>
<h3 id="13-line-break-characters">13. Line Break Characters</h3>
<ul>
<li>
<p><strong>Display Non-printing Characters</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">list</span>
</span></span><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">listchars</span>=<span style="color:#a6e22e">tab</span>:»·,<span style="color:#a6e22e">trail</span>:·
</span></span></code></pre></div><p>This shows special characters like tabs (<code>»</code>) and trailing spaces (<code>·</code>), which can be useful for cleaning up your text.</p>
</li>
<li>
<p><strong>Hide Non-printing Characters</strong>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span>:<span style="color:#66d9ef">set</span> <span style="color:#a6e22e">nolist</span>
</span></span></code></pre></div></li>
</ul>
<hr>
<p>These <code>:set</code> commands let you tweak Vim to match your workflow and preferences, from simple appearance changes to more advanced features like auto-indentation or search behaviors. Once you’ve customized your settings, you can even save them in your <code>.vimrc</code> file to make these changes permanent across sessions.</p>
<h2 id="vimrc-file"><code>.vimrc</code> File</h2>
<p>The <code>.vimrc</code> file is a configuration file that Vim loads at startup, allowing you to customize Vim’s behavior.
<strong>Location of the <code>.vimrc</code> file</strong>: <code>~/.vimrc</code></p>
<h3 id="basic-structure">Basic Structure</h3>
<p>The <code>.vimrc</code> file contains Vim commands for settings, keybindings, and other customizations.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-vim" data-lang="vim"><span style="display:flex;"><span><span style="color:#75715e">&#34; Enable line numbers</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">set</span> <span style="color:#a6e22e">number</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">&#34; Enable syntax highlighting</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">syntax</span> <span style="color:#a6e22e">enable</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">&#34; Set color scheme to &#39;desert&#39;</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">colorscheme</span> <span style="color:#a6e22e">desert</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">&#34; Enable smart indentation, set tab width and spaces for indentation</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">set</span> <span style="color:#a6e22e">smartindent</span>          <span style="color:#75715e">&#34; Automatically indent new lines</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">set</span> <span style="color:#a6e22e">shiftwidth</span>=<span style="color:#ae81ff">4</span>         <span style="color:#75715e">&#34; Indentation width for new lines</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">set</span> <span style="color:#a6e22e">tabstop</span>=<span style="color:#ae81ff">4</span>            <span style="color:#75715e">&#34; Number of spaces a tab is equal to</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">set</span> <span style="color:#a6e22e">expandtab</span>            <span style="color:#75715e">&#34; Convert tabs to spaces</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">&#34; Ignore case during search and highlight search results</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">set</span> <span style="color:#a6e22e">ignorecase</span>           <span style="color:#75715e">&#34; Ignore case in searches</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">set</span> <span style="color:#a6e22e">hlsearch</span>             <span style="color:#75715e">&#34; Highlight search matches</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">&#34; Enable mouse support in all modes</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">set</span> <span style="color:#a6e22e">mouse</span>=<span style="color:#a6e22e">a</span>              <span style="color:#75715e">&#34; Mouse can be used in all modes (Normal, Insert, Visual, etc.)</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">&#34; Enable backup files and specify backup directory</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">set</span> <span style="color:#a6e22e">backup</span>               <span style="color:#75715e">&#34; Enable backup files</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">set</span> <span style="color:#a6e22e">backupdir</span>=~/<span style="color:#a6e22e">vim</span>-<span style="color:#a6e22e">backups</span>  <span style="color:#75715e">&#34; Set the directory for backup files</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">&#34; Automatically set the filetype to Python for .py files</span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">autocmd</span> <span style="color:#a6e22e">BufRead</span>,<span style="color:#a6e22e">BufNewFile</span> *.<span style="color:#a6e22e">py</span> <span style="color:#66d9ef">set</span> <span style="color:#66d9ef">filetype</span>=<span style="color:#a6e22e">python</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e">&#34; Map &#39;jj&#39; to escape Insert mode (useful for avoiding the Esc key)</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">inoremap</span> <span style="color:#a6e22e">jj</span> &lt;<span style="color:#a6e22e">Esc</span>&gt;        <span style="color:#75715e">&#34; Press &#39;jj&#39; to exit Insert mode</span>
</span></span></code></pre></div><h4 id="explanation-of-comments">Explanation of Comments:</h4>
<ul>
<li><strong>Line Numbers</strong>: Displays line numbers for easier navigation.</li>
<li><strong>Syntax Highlighting</strong>: Enables syntax color coding for better readability.</li>
<li><strong>Color Scheme</strong>: Sets a predefined color scheme for the editor.</li>
<li><strong>Indentation</strong>: Configures tab and space behavior to match the desired coding style.</li>
<li><strong>Search Settings</strong>: Makes searches case-insensitive and highlights matching results.</li>
<li><strong>Mouse Support</strong>: Allows using the mouse in all Vim modes.</li>
<li><strong>Backup Files</strong>: Enables backups and sets the directory where backup files will be stored.</li>
<li><strong>Filetype Settings</strong>: Automatically applies file-specific settings based on file extension (e.g., Python for <code>.py</code> files).</li>
<li><strong>Key Mapping</strong>: Allows custom key mappings, such as pressing <code>jj</code> to exit Insert mode.</li>
</ul>
<h2 id="waypoints-in-vim">Waypoints in Vim</h2>
<p><strong>Waypoints</strong> are useful for marking specific places in your file to quickly return to. This can be especially helpful when navigating through large files. In Vim, waypoints are often referred to as <strong>marks</strong>.</p>
<h3 id="setting-and-using-marks">Setting and Using Marks:</h3>
<ol>
<li><strong>Set a Mark</strong>:
<ul>
<li>To set a mark, press <code>m</code> followed by a letter (a-z). For example, <code>ma</code> sets a mark named <code>a</code> at the current cursor position.</li>
</ul>
</li>
<li><strong>Jump to a Mark</strong>:
<ul>
<li>To jump to a specific mark, press <code>'</code> followed by the mark&rsquo;s letter. For example, <code>'a</code> takes you to the position where mark <code>a</code> was set.</li>
</ul>
</li>
<li><strong>View All Marks</strong>:
<ul>
<li>You can see a list of all active marks by typing <code>:marks</code>.</li>
</ul>
</li>
</ol>
<h3 id="example-3">Example:</h3>
<ol>
<li>Move to a specific line, say line 10.</li>
<li>Set a mark with <code>ma</code> (mark &ldquo;a&rdquo;).</li>
<li>Continue editing elsewhere.</li>
<li>Return to the mark by typing <code>'a</code>.</li>
</ol>
<p>Marks allow you to quickly navigate between important points in your file without needing to rely on line numbers or searching.</p>
<h2 id="the-reg-command">The <code>:reg</code> Command</h2>
<p>The <code>:reg</code> command in Vim allows you to view and manage the contents of Vim&rsquo;s <strong>registers</strong>. Registers are temporary storage areas where text is stored when you cut, copy, or paste in Vim. This command helps you access these stored texts, allowing for easy retrieval and reuse.</p>
<h3 id="viewing-registers"><strong>Viewing Registers</strong></h3>
<ul>
<li>To view the contents of all registers, type <code>:reg</code> and press Enter.</li>
<li>This will display a list of registers and their contents.</li>
</ul>
<h3 id="using-specific-registers"><strong>Using Specific Registers</strong></h3>
<ul>
<li>You can access specific registers by typing <code>:reg</code> followed by the register name. For example, <code>:reg a</code> shows the contents of register <code>a</code>.</li>
</ul>
<h3 id="types-of-registers"><strong>Types of Registers:</strong></h3>
<ol>
<li><strong>Unnamed Register</strong> (<code>&quot;&quot;</code>): Stores text that was last yanked or deleted.</li>
<li><strong>Named Registers</strong> (<code>a-z</code>): These are registers that you can explicitly specify when yanking or deleting. You can yank or delete to a specific register with <code>&quot;a</code>, <code>&quot;b</code>, etc.</li>
<li><strong>Numbered Registers</strong> (<code>0-9</code>): Automatically store text from the most recent yank or delete operations, with <code>0</code> holding the most recent yank.</li>
<li><strong>Special Registers</strong>:
<ul>
<li><code>&quot;%</code>: The current file name.</li>
<li><code>&quot;#</code>: The name of the alternate file.</li>
<li><code>&quot;*</code> and <code>&quot;+</code>: Access to the system clipboard (if supported).</li>
</ul>
</li>
<li><strong>Macro Registers</strong> (<code>q</code>-<code>z</code>): These registers are used to store <strong>macros</strong> (sequences of commands). By recording a macro, you can save a sequence of commands to a register and replay them later.</li>
</ol>
<h3 id="examples"><strong>Examples:</strong></h3>
<ol>
<li><strong>Copying to a Register</strong>:
<ul>
<li><code>&quot;ayw</code>: Yank a word into register <code>a</code>.</li>
</ul>
</li>
<li><strong>Pasting from a Register</strong>:
<ul>
<li><code>&quot;ap</code>: Paste the content of register <code>a</code>.</li>
</ul>
</li>
<li><strong>Viewing Register Contents</strong>:
<ul>
<li><code>:reg a</code>: View the contents of register <code>a</code>.</li>
</ul>
</li>
<li><strong>Saving a Macro to a Register</strong>:
<ul>
<li>Press <code>q</code> followed by any register letter (e.g., <code>qa</code>) to start recording a macro into register <code>a</code></li>
<li>Perform the desired actions.</li>
<li>Press <code>q</code> again to stop recording.</li>
</ul>
</li>
<li><strong>Playing a Macro from a Register</strong>:
<ul>
<li>Press <code>@a</code> to replay the macro stored in register <code>a</code>.</li>
</ul>
</li>
</ol>
<p>The <code>:reg</code> command, along with macro functionality, gives you powerful tools to manage and reuse text and commands in Vim, enhancing your productivity and workflow.</p>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Download VS-Code on Linux</title>
      <link>/posts/download-vs-code-on-linux/</link>
      <pubDate>Wed, 04 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>/posts/download-vs-code-on-linux/</guid>
      <description><![CDATA[<ol>
<li>
<p>Visit the <a href="https://code.visualstudio.com/download">Visual Studio Code download page</a>.
<img src="/images/Pasted%20image%2020241202122253.png" alt="Image Description"></p>
</li>
<li>
<p>Download the appropriate <code>.deb</code> file for your system.</p>
</li>
<li>
<p>Once the download is complete, open a terminal and run the following command to install it:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>sudo dpkg -i ./the-vscode-.deb-file
</span></span></code></pre></div><p><em>(Replace <code>./the-vscode-.deb-file</code> with the actual file name you downloaded.)</em></p>
<p><img src="/images/daa701f0-5f39-4852-a887-61a7d942ea7d.jpg" alt="Image Description"></p>
</li>
<li>
<p>The installation process might take a while, so feel free to grab a snack while it completes.</p>
</li>
</ol>
]]></description>
      
    </item>
    
    
    
    <item>
      <title></title>
      <link>/posts/untitled/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/posts/untitled/</guid>
      <description><![CDATA[<p>Laser distance sensor lidar (LDS)</p>
]]></description>
      
    </item>
    
    
  </channel>
</rss>
